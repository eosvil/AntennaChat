<Window x:Class="AntennaChat.Views.LoginWindowView"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AntennaChat"        
        xmlns:re ="clr-namespace:AntennaChat.Resource"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:notifyIconWpf="clr-namespace:NotifyIconWpf;assembly=NotifyIconWpf"
        mc:Ignorable="d"
        Title="七讯登录" Height="470" Width="370" WindowStartupLocation="CEnterScreen"  WindowStyle="None" ResizeMode="CanMinimize"  Name="LoginWin" Tag="{Binding Param,Mode=TwoWay}" 
        Icon="/AntennaChat;component/七讯.ico" Background="{x:Null}" AllowsTransparency="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"  CommandParameter="{Binding ElementName=LoginWin}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MoveWindow}" CommandParameter="{Binding ElementName=LoginWin}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" />
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="OnlineStateComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Padding" Value="4,3"/>
                <Setter Property="Width" Value="80"></Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Border x:Name="DropDownBorder" BorderBrush="#FFCCCCCC" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Margin="3">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#FFE4E2E2"  BlurRadius="10" ShadowDepth="0" Opacity="1" />
                                        </Border.Effect>
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <StackPanel Orientation="Horizontal"   Background="Transparent" VerticalAlignment="Center" Margin="10,0,0,0">
                                    <Image Source="{Binding UserSelectedState.StateImage}" Stretch="None" ></Image>
                                    <TextBlock Text="{Binding UserSelectedState.StateContent}" Margin="10,0,0,0"/>
                                </StackPanel>
                                <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Content="{TemplateBinding SelectedValue}" Background="{TemplateBinding Background}"
                                          Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{DynamicResource ComboBoxReadonlyToggleButton}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" Value="#FFF4F4F4"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NotifyMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="True">
                                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="22"/>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Border x:Name="GlyphPanel" BorderBrush="#FFCDD3E6" BorderThickness="1" Background="#FFE6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                                        <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
                                    </Border>
                                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Fill" TargetName="Bg">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                                <GradientStop Color="#3481D8FF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                                    <Setter Property="Background" TargetName="GlyphPanel" Value="#FFEEE9E9"/>
                                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FFDBD6D6"/>
                                    <Setter Property="Fill" TargetName="Glyph" Value="#FF848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AntennaChat;component/Resource/LineStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid >
        <notifyIconWpf:TaskbarIcon   x:Name="taskbarIcon" 
                                DoubleClickCommand="{Binding Path=CommandOpenMainWindow}" IconSource="/AntennaChat;component/ant_offLine.ico">
            <notifyIconWpf:TaskbarIcon.TrayToolTip>
                <Border Background="#FFF1F1F0"  CornerRadius="2">
                    <TextBlock Margin="10,4" Text="七讯"/>
                </Border>
            </notifyIconWpf:TaskbarIcon.TrayToolTip>
            <notifyIconWpf:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem  Command="{Binding Path=CommandExitMainWindow}" CommandParameter="{Binding}" Style="{StaticResource NotifyMenuItem}">
                        <MenuItem.Header>
                            <TextBlock Margin="8,0,0,0" Text="退出"/>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </notifyIconWpf:TaskbarIcon.ContextMenu>
        </notifyIconWpf:TaskbarIcon>
        <!--<Grid Visibility="Hidden">-->
        <Border  CornerRadius="4" BorderThickness="0" Background="White"/>
        <Grid Visibility="{Binding LoginVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="160"/>
                <RowDefinition Height="22"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/AntennaChat;Component/Images/登录-背景-1-气泡.png"/>
                </Grid.Background>
            </Grid>
            <Image Name="head_image" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="CEnter" VerticalAlignment="Bottom" Height="111" Width="111" UseLayoutRounding="True"  Source="pack://application:,,,/AntennaChat;Component/Images/logoIcon/logo.png"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,8,0" Grid.Row="0">
                <Button Width="24" Height="24" Name="btn_small" Style="{StaticResource SmallButton}"  ToolTip="最小化" Command="{Binding MinimizeWindow}" CommandParameter="{Binding ElementName=LoginWin}"/>
                <Button Width="24" Height="24" Name="btn_close" Style="{StaticResource CloseButton}"  ToolTip="关闭" Margin="10,0,0,0" Command="{Binding ExitApp}" CommandParameter="{Binding ElementName=LoginWin}"/>
            </StackPanel>
            <Grid Grid.Row="2" Margin="0,20,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ComboBox Name="cmb_id" Style="{StaticResource WatermarkComboBox}"  Height="44" Width="270" HorizontalAlignment="CEnter" VerticalAlignment="Bottom" SelectedIndex="-1" Grid.Row="0"  ItemsSource="{Binding ListID}" Text="{Binding LoginID}" SelectedItem="{Binding SelectedData}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="276" Height="26">
                                <TextBlock Name="text" Margin="10,0,0,0" FontSize="16" VerticalAlignment="CEnter" HorizontalAlignment="Left" Text="{Binding}"/>
                                <Button x:Name="btn_clear" HorizontalAlignment="Right" Style="{StaticResource ClearBtnStyle}" Tag="{Binding Path=Text,ElementName=text}" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" CommandParameter="{Binding Path=Tag,ElementName=btn_clear}"/>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Popup x:Name="pop_id"  PopupAnimation="Fade" Width="190" Height="40" PlacementTarget="{Binding ElementName=cmb_id}" Placement="Bottom" HorizontalOffset="-20" StaysOpen="False" IsOpen="{Binding IDPopuIsOpen}" AllowsTransparency="True">
                    <Border>
                        <Border.Background>
                            <ImageBrush ImageSource="pack://application:,,,/AntennaChat;Component/Images/气泡.png"/>
                        </Border.Background>
                        <TextBlock FontSize="14" HorizontalAlignment="CEnter" VerticalAlignment="CEnter" Margin="5" Opacity="0.8" Text="请输入正确的手机号或邮箱"></TextBlock>
                    </Border>
                </Popup>
                <PasswordBox x:Name="txt_pwd" Style="{StaticResource WaterMarkPasswordBox}" Height="44" Width="270"  VerticalAlignment="Bottom" Grid.Row="1"  HorizontalAlignment="CEnter" re:WatermarkPasswordBox.Watermark="请输入密码" 
                         re:PasswordBoxHelper.Attach="True" re:PasswordBoxHelper.Password="{Binding LoginPwd, Mode=TwoWay}" MaxLength="16" Margin="0,20,0,0"/>
                <Popup x:Name="pop_pwd"  PopupAnimation="Fade" Width="125" Height="40" PlacementTarget="{Binding ElementName=txt_pwd}" Placement="Bottom" HorizontalOffset="-10" StaysOpen="False" IsOpen="{Binding PwdPopuIsOpen}" AllowsTransparency="True">
                    <Border>
                        <Border.Background>
                            <ImageBrush ImageSource="pack://application:,,,/AntennaChat;Component/Images/气泡.png"/>
                        </Border.Background>
                        <TextBlock FontSize="14" HorizontalAlignment="CEnter" VerticalAlignment="CEnter" Margin="5" Opacity="0.8" Text="请输入密码再登录"></TextBlock>
                    </Border>
                </Popup>
                <StackPanel Grid.Row="2" Orientation="Horizontal" Visibility="{Binding IsIdentifyingCode,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="CEnter" VerticalAlignment="CEnter" Margin="0,16,0,0" Width="270">
                    <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="Gray" CornerRadius="2"  Margin="0,0,10,0">
                    <TextBox Height="36" Width="152" Text="{Binding IdentifyingCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Margin="15,0,10,0" BorderThickness="0">
                        <TextBox.Resources>
                            <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="1" Stretch="None" AlignmentX="Left">
                                <VisualBrush.Visual>
                                        <TextBlock Text="请输入验证码" Foreground="Gray" FontSize="14" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                        <Setter Property="FontSize" Value="12"></Setter>
                                    </Trigger>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                        <Setter Property="FontSize" Value="12"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    </Border>
                    <Image x:Name="imageIdentifying"  Source="{Binding IdentifyingCodeBitmap}" Width="80" Height="34" Stretch="Fill" ToolTip="点击图片刷新验证码">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding IdentifyingImageCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                </StackPanel>
                <ComboBox Grid.Row="3" HorizontalAlignment="Left" ItemsSource="{Binding UserOnlineStates}"    Style="{StaticResource OnlineStateComboBoxStyle}"  
                      SelectedValue="{Binding UserSelectedState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Bottom" Margin="43,5,0,0">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="5,5,0,5" Width="60">
                                <Image Source="{Binding StateImage}" Stretch="None" />
                                <TextBlock Text="{Binding StateContent}" Margin="10,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <CheckBox Name="chk_rememberPwd" Style="{StaticResource CheckBoxStyle}" Height="16" Width="70" Grid.Row="3" Content="记住密码" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5,188,0" IsChecked="{Binding IsRememberPwd}"/>
                <!--0,0,130,140-->
                <CheckBox Name="chk_autoLogin" Style="{StaticResource CheckBoxStyle}" Height="16" Width="70" Grid.Row="3" Content="自动登录" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5,110,0" IsChecked="{Binding IsAutoLogin}"/>
                <!--lab_ForgetPwd-->
                <Path Grid.Row="3" Style="{StaticResource VerticalBeeLine}" Fill="#FFF4F4F5" HorizontalAlignment="Right" Margin="0,5,104,0"  Height="15" Stretch="Fill" Stroke="Gray"  Width="1"/>
                <Button x:Name="lab_ForgetPwd" Style="{StaticResource btnForgetStyle}" Command="{Binding btnCommandForget}" Foreground="Gray" Background="White" Content="忘记密码" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,50,0" Grid.Row="3"/>
            </Grid>
            <Button Name="btn_login" Style="{StaticResource BlueButton_Style}" Height="44" Width="270" HorizontalAlignment="CEnter"  FontSize="16"  Content="登录" Grid.Row="3" Margin="0,0,0,0" IsDefault="True"  Command="{Binding LoginCommand}"/>
            <Popup x:Name="pop_tip"  PopupAnimation="Fade" PlacementTarget="{Binding ElementName=txt_pwd}" Placement="CEnter" VerticalOffset="-20"  StaysOpen="False" IsOpen="{Binding TipsPopuIsOpen}" AllowsTransparency="True">
                <TextBlock x:Name="lab_tips" Grid.Row="2" HorizontalAlignment="CEnter" VerticalAlignment="CEnter" Style="{StaticResource Label_Style}" TextWrapping="Wrap" MaxWidth="200" Text="{Binding TipsLabelText}" Opacity="0.9"/>
                    
            </Popup>
        </Grid>
        <!--<Grid Visibility="Hidden">-->
        <Grid x:Name="loading_Grid" Visibility="{Binding IsLogining}">
            <Grid.Background>
                <ImageBrush ImageSource="pack://application:,,,/AntennaChat;Component/Images/背景-2.png"/>
            </Grid.Background>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,8,0" Grid.Row="0">
                <Button Width="24" Height="24" Style="{StaticResource SmallButton}"  ToolTip="最小化" Command="{Binding MinimizeWindow}" CommandParameter="{Binding ElementName=LoginWin}"/>
                <Button Width="24" Height="24" Style="{StaticResource CloseButton}"  ToolTip="关闭" Margin="10,0,0,0" Command="{Binding ExitApp}" CommandParameter="{Binding ElementName=LoginWin}" />
            </StackPanel>
            <re:ModernProgressRing IsActive="True" Style="{StaticResource ChasingDotsProgressRingStyle}" Height="100" Width="100" VerticalAlignment="Top" Margin="0,200,0,0" />
            <TextBlock Text="正在登录..." HorizontalAlignment="CEnter" VerticalAlignment="Bottom" Margin="0,0,0,128" Foreground="#008EE0" FontSize="12"/>
        </Grid>
        <Grid x:Name="forget_pwd_ui" Visibility="{Binding IsForgetPwdUi}" Background="White">
            <Grid.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding btnCommandNext}" />
            </Grid.InputBindings>
            <!--<Grid x:Name="forget_pwd_ui" Visibility="Hidden" Background="White">-->
            <Grid.RowDefinitions>
                <RowDefinition Height="45"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="80"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#1991ed">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,8,0">
                    <Button Width="24" Height="24" Style="{StaticResource SmallButton}"  ToolTip="最小化" Command="{Binding MinimizeWindow}" CommandParameter="{Binding ElementName=LoginWin}"/>
                    <Button Width="24" Height="24" Style="{StaticResource CloseButton}"  ToolTip="关闭" Margin="10,0,0,0" Command="{Binding ExitApp}" CommandParameter="{Binding ElementName=LoginWin}" />
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,50,0,0">
                    <TextBlock Text="忘记密码" FontSize="18" HorizontalAlignment="Center"  Foreground="#1991ed" FontFamily="PingFang" FontWeight="Bold"></TextBlock>
                    <Path Style="{StaticResource HorizontalBeeLine}" Fill="#FFF4F4F5" StrokeThickness="2" Height="10"  Stretch="Fill" Stroke="#1991ed"  Width="72"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2">
                <TextBox Height="40" Width="270" Style="{StaticResource textBoxPhone}" AcceptsTab="True"></TextBox>
            </Grid>
            <Grid Grid.Row="3">
                <TextBox Height="40" Width="270" VerticalAlignment="Top" Style="{StaticResource textBoxCode}" AcceptsTab="True"></TextBox>
            </Grid>
            <Grid Grid.Row="4">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <Button Name="btn_Next" Style="{StaticResource BlueButton_Style}" Height="44" Width="270" HorizontalAlignment="CEnter"  VerticalAlignment="Top" FontSize="16"  Content="下一步" Grid.Row="2" Margin="0,0,0,0" Command="{Binding btnCommandNext}"/>
                    <Button x:Name="textBlockBack" Command="{Binding btnCommandBackFirst}" Style="{StaticResource btnForgetStyle}" HorizontalAlignment="CEnter" Margin="0,10,0,0" Content="返回登录" Foreground="#999999" CommandParameter="{Binding ElementName=textBlockBack}"></Button>
                </StackPanel>
            </Grid>
        </Grid>
        <!--设置密码UI-->
        <Grid x:Name="set_pwd_ui" Visibility="{Binding IsSetPwdUi}" Background="White">
            <Grid.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding btnEnterCommand}" />
            </Grid.InputBindings>
            <!--<Grid x:Name="set_pwd_ui" Visibility="Hidden" Background="White">-->
            <Grid.RowDefinitions>
                <RowDefinition Height="45"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="80"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#1991ed">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,8,0">
                    <Button Width="24" Height="24" Style="{StaticResource SmallButton}"  ToolTip="最小化" Command="{Binding MinimizeWindow}" CommandParameter="{Binding ElementName=LoginWin}"/>
                    <Button Width="24" Height="24" Style="{StaticResource CloseButton}"  ToolTip="关闭" Margin="10,0,0,0" Command="{Binding ExitApp}" CommandParameter="{Binding ElementName=LoginWin}" />
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,50,0,0">
                    <TextBlock Text="设置密码" FontSize="18" HorizontalAlignment="Center"  Foreground="#1991ed" FontFamily="PingFang" FontWeight="Bold"></TextBlock>
                    <Path Style="{StaticResource HorizontalBeeLine}" Fill="#FFF4F4F5" StrokeThickness="2" Height="10"  Stretch="Fill" Stroke="#1991ed"  Width="72"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2">
                <PasswordBox x:Name="pwd_set_first" Style="{StaticResource SetPasswordBox}" Height="40" Width="270"  HorizontalAlignment="CEnter" re:WatermarkPasswordBox.Watermark="请输入密码" 
                         re:PasswordBoxHelper.Attach="True" re:PasswordBoxHelper.Password="{Binding firstPwd, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxLength="16"/>
            </Grid>
            <Grid Grid.Row="3">
                <PasswordBox x:Name="pwd_set_second" Style="{StaticResource SetPasswordBox}"  VerticalAlignment="Top" Height="40" Width="270"  HorizontalAlignment="CEnter" re:WatermarkPasswordBox.Watermark="请输入密码" 
                         re:PasswordBoxHelper.Attach="True" re:PasswordBoxHelper.Password="{Binding secondPwd, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxLength="16"/>
                <!--<PasswordBox Height="40" Width="240" VerticalAlignment="Top" Style="{StaticResource textBoxSetPwdFirst}"></PasswordBox>-->
            </Grid>
            <Grid Grid.Row="4">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                    <Button Name="btn_EnterSys" Style="{StaticResource BlueButton_Style}" Height="44" Width="270" HorizontalAlignment="CEnter"  VerticalAlignment="Top" FontSize="16"  Content="进入七讯" Grid.Row="2" Margin="0,0,0,0" Command="{Binding btnEnterCommand}"/>
                    <!--<TextBlock Name="secondBack" HorizontalAlignment="CEnter" Margin="0,10,0,0" Text="返回登录" Foreground="#999999"></TextBlock>-->
                    <Button x:Name="secondBack" Command="{Binding btnCommandBackFirst}" Style="{StaticResource btnForgetStyle}" HorizontalAlignment="CEnter" Margin="0,10,0,0" Content="返回登录" Foreground="#999999" CommandParameter="{Binding ElementName=secondBack}"></Button>
                </StackPanel>
            </Grid>
        </Grid>
        <TextBlock FontSize="12" Grid.Column="1" Margin="0,300,0,135" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" Opacity="0.8" Text="{Binding showText}" Visibility="{Binding isShowTextBlock}"/>
    </Grid>
</Window>
