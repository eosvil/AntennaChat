<UserControl x:Class="AntennaChat.Views.Contacts.StructureDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AntennaChat.Views.Contacts"
             xmlns:talk="clr-namespace:AntennaChat.ViewModel.Talk"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:antennaChat="clr-namespace:AntennaChat"
             mc:Ignorable="d"
             x:Name="Control"
             d:DesignHeight="300" d:DesignWidth="300" AllowDrop="True">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ContentControl x:Name="ContentControl"/>
        <Grid Margin="136,0,0,0" Grid.Row="1">
            <Button  Content="发送消息" Command="{Binding SendMsgCommand}" Style="{StaticResource BlueButton_Style}" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="96" Margin="0,30"/>
            <StackPanel Orientation="Horizontal" Visibility="{Binding IsGroup,Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button  Content="退出群组" Command="{Binding ExitGroupCommand}"  FontSize="14"  BorderBrush="Red" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="96" Margin="116,30,0,0">
                    <Button.Style>
                        <Style BasedOn="{StaticResource NoticeBtnStyle}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAdministrator}" Value="false">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAdministrator}" Value="true">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button  Content="解散群组" Command="{Binding ExitGroupCommand}" Style="{StaticResource NoticeBtnStyle}" FontSize="14" BorderBrush="Red" Foreground="Red" Visibility="{Binding IsAdministrator,Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="96" Margin="116,30,0,0"/>
            </StackPanel>
        </Grid>
        <Grid Grid.RowSpan="2" Width="296"  HorizontalAlignment="Right" Background="White" Visibility="{Binding IsShowMembers,Converter={StaticResource BooleanToVisibilityConverter}}" MouseLeave="UIElement_OnMouseLeave">
            <TextBlock Text="群成员" x:Name="typeName" FontSize="16" FontWeight="Bold" Foreground="#333333" Margin="20,15,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Button Style="{StaticResource ClearBtnStyle}" Width="24" Height="24"  ToolTip="关闭" Command="{Binding CloseCommand}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,15,10,0"/>
            <ListBox HorizontalAlignment="Right" Style="{DynamicResource ListBoxStyle}" x:Name="lstMembers"  Margin="10,52,0,0"    ItemsSource="{Binding GroupMembers}"   ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  
                     SelectionMode="Single"
                     SelectedValue="{Binding CurrentGroupMember,Mode=TwoWay}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="286">
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="0,0,5,0">
                                        <Grid>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <Popup x:Name="popupShowUser" IsOpen="False"   AllowsTransparency="True" PlacementTarget="{Binding ElementName=Bd}"   Placement="Mouse" StaysOpen="False"  PopupAnimation="None">
                                                <local:UserInfoView DataContext="{Binding DataContext.UserInfoViewModel,ElementName=Control}"/>
                                            </Popup>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#F5F5F5"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="#f0f0f0"/>
                                            <Setter TargetName="popupShowUser" Property="IsOpen" Value="True"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="popupShowUser" Property="IsOpen" Value="False"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </ListBox.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ShowUserInfoCommand}" CommandParameter="{Binding CurrentGroupMember}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type talk:GroupMemberViewModel}">
                        <Grid  Height="90" Width="64">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Image Source="{Binding picture}" Height="44" Width="44"  />
                            <Rectangle   Width="44" Height="44" Stroke="#e0e0e0" RadiusX="2" RadiusY="2" Margin="0,10,0,0">
                                <Rectangle.Fill>
                                    <ImageBrush  ImageSource="{Binding Photo}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1" Margin="0,12,0,0"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <Border Width="1" BorderThickness="0" Background="#e0e0e0" HorizontalAlignment="Left"/>

        </Grid>
    </Grid>
</UserControl>
