<Window x:Class="AntennaChat.Views.Talk.PictureViewerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AntennaChat.Views.Talk"
        xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"             
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:re ="clr-namespace:AntennaChat.Resource"
        mc:Ignorable="d"
        Title="图片查看器" Height="600" Width="820" MinHeight="400" MinWidth="510" WindowStyle="None" WindowStartupLocation="CenterScreen" 
        Icon="/AntennaChat;component/七讯.ico" AllowsTransparency="True"
        UseLayoutRounding="True"
        RenderOptions.BitmapScalingMode="NearestNeighbor"
        SnapsToDevicePixels="True"  Name="PicWindow" Cursor="Hand" Background="Transparent">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome GlassFrameThickness="-1" ResizeBorderThickness="2"
                        CaptionHeight="4" CornerRadius="0" />
    </shell:WindowChrome.WindowChrome>
    <Window.ContextMenu>
        <ContextMenu x:Name="contextMenu" Style="{StaticResource ResourceKey=ContextMenuStyle}" Width="Auto" Visibility="{Binding ContextMenuVisibility}">
            <MenuItem Header="复制" x:Name="copyImage" Command="{Binding CopyImageCommand}" 
                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu},  Path=PlacementTarget}"/>
        </ContextMenu>
    </Window.ContextMenu>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=PicWindow}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MoveWindow}" CommandParameter="{Binding ElementName=PicWindow}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <ei:CallMethodAction TargetObject="{Binding}" MethodName="PicWindow_MouseMove"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding SizeChangedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding PicWindowClosed}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="Transparent">
        <ScrollViewer x:Name="mainScrollv"  HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Disabled" Background="Transparent" Margin="0" Focusable="False" Width="{Binding ScrollViewerWidth}" Height="{Binding ScrollViewerHeight}">
            <Grid Name="grid" Background="Transparent">
                <Border Background="#333333" Opacity="0.5" CornerRadius="2"/>
                <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                    <!--<Image x:Name="IMG" Margin="0" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding PicturePath}"  Stretch="Uniform" UseLayoutRounding="True">
                    <Image.RenderTransform>
                        <TransformGroup x:Name="transformGroup">
                            <ScaleTransform ScaleX="{Binding Scale_X}" ScaleY="{Binding Scale_Y}"/>
                            <TranslateTransform X="{Binding T_X}" Y="{Binding T_Y}"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>-->
                <re:GifImage x:Name="IMG" Margin="0" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform" UseLayoutRounding="True">
                    <Image.RenderTransform>
                        <TransformGroup x:Name="transformGroup">
                            <ScaleTransform ScaleX="{Binding Scale_X}" ScaleY="{Binding Scale_Y}"/>
                            <TranslateTransform X="{Binding T_X}" Y="{Binding T_Y}"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </re:GifImage>
                    <!--<Rectangle  Name="imageRect">
                        <Rectangle.Fill>
                            <ImageBrush x:Name="brush" ImageSource="{Binding PicturePath}" Stretch="Uniform" />
                        </Rectangle.Fill>
                        <Rectangle.RenderTransform>
                            <TransformGroup x:Name="transformGroup">
                                <ScaleTransform ScaleX="{Binding Scale_X}" ScaleY="{Binding Scale_Y}"/>
                                <TranslateTransform X="{Binding T_X}" Y="{Binding T_Y}"/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="ContentControl_Loaded"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="ContentControl_MouseLeftButtonDown"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="ContentControl_MouseLeftButtonUp"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="ContentControl_MouseMove"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseWheel">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="ContentControl_MouseWheel"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ContentControl>
            </Grid>
        </ScrollViewer>
        <Button x:Name="btn_close" Style="{StaticResource PicCloseButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="25" Width="25" Margin="0,10,10,0" ToolTip="关闭" Cursor="Arrow"
                Command="{Binding ClosePicWindow}" CommandParameter="{Binding ElementName=PicWindow}"/>
        <Button x:Name="btn_pre" Style="{StaticResource PrePicButton}" Command="{Binding PreCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="40" Width="40" Margin="10,0,0,0" ToolTip="上一张" Visibility="{Binding PreButtonVisibility}" Cursor="Arrow"/>
        <Button x:Name="btn_next" Style="{StaticResource NextPicButton}" Command="{Binding NextCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40" Margin="20,20,10,20" ToolTip="下一张" Visibility="{Binding NextButtonVisibility}" Cursor="Arrow"/>
        <Border Name="border" BorderThickness="0" Grid.Row="1" CornerRadius="4,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="148" Height="36"  Background="Black" Opacity="0.8" Visibility="{Binding BorderVisibility}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button x:Name="btn_save" Style="{StaticResource SavePicButton}" VerticalAlignment="Center" Height="28" Width="24" ToolTip="保存" Cursor="Arrow" Command="{Binding FileSaveCommand}"/>
                <Button x:Name="btn_rotate" Style="{StaticResource RotatePicButton}" VerticalAlignment="Center" Height="28" Width="24" Margin="20,0,0,0" ToolTip="旋转" Cursor="Arrow" Command="{Binding RotateCommand}" Visibility="Collapsed"/>
            </StackPanel>
        </Border>
        <Border BorderBrush="#1E1E1E" BorderThickness="1" CornerRadius="4" Background="#1E1E1E" Height="60" Width="130" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding PercentVisibility}">
            <TextBlock x:Name="lab_tips" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding PercentText}" FontSize="32" Foreground="White"/>
        </Border>
        <Border BorderBrush="#1E1E1E" BorderThickness="1" CornerRadius="4" Background="#1E1E1E" Height="40" Width="150" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding TipsVisibility}">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding TipsText}" FontSize="16" Foreground="White"/>
        </Border>
        <!--<re:ModernProgressRing IsActive="True" Style="{StaticResource CircleProgressRingStyle}" Height="100" Width="100" Foreground="Gray" Visibility="{Binding IsShowLoading}"/>-->
    </Grid>
</Window>
